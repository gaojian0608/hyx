<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
 						http://www.springframework.org/schema/beans/spring-beans.xsd
       					http://www.springframework.org/schema/util
       					http://www.springframework.org/schema/util/spring-util.xsd
     					http://www.springframework.org/schema/context 
     					http://www.springframework.org/schema/context/spring-context.xsd
     					http://www.springframework.org/schema/aop 
     					http://www.springframework.org/schema/aop/spring-aop.xsd
     					http://www.springframework.org/schema/tx 
     					http://www.springframework.org/schema/tx/spring-tx.xsd">
 
 	<!-- 扫描该包下面的所有注解 -->
    <context:component-scan base-package="com.yc">
    	<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
    </context:component-scan> 
 	
 	<!-- 引入sql四项 -->
   	<context:property-placeholder location="classpath:db.properties"/>
   	<!-- 数据源 -->
   	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
   		<property name="user" value="${user}"></property>
   		<property name="password" value="${password}"></property>
   		<property name="driverClass" value="${driverClass}"></property>
   		<property name="jdbcUrl" value="${jdbcUrl}"></property>
   	</bean>
   	
   	<!-- 配置spring  template -->
   <!-- 	<bean id="jdbcTempLate" class="org.springframework.jdbc.core.JdbcTemplate">
   		<property name="dataSource" ref="dataSource"></property>
   	</bean> -->
   	
   	<!-- sqlseesionfactory 配置和Mybatis的整合-->
   	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<!-- 指定mybatis全局文件的位置 -->
   		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
   		<property name="dataSource" ref="dataSource"></property>
   		<!-- 指定MybatisMapper文件的位置 -->
   		<property name="mapperLocations" value="classpath:com/yc/dao/*Mapper.xml"></property>
   	</bean>
   	
   	<!-- 配置扫描器，将mybatis接口的实现加入ioc容器中 MapperScannerConfiguer -->
   	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage" value="com.yc.dao"></property>
   		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>     		
   	</bean>
   	
   	<!-- 配置事务管理器 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<!-- 控制数据源 -->
   		<property name="dataSource" ref="dataSource"></property>
   	</bean>
   	
   	<!-- 开启基于注解的业务，此处使用xml配置方法配置业务 -->
   	<aop:config>
   		<!-- 切入点的表达式 -->
   		<aop:pointcut expression="execution(* com.yc.biz..*(..))" id="txPoint"/>
   		<!-- 配置事务的表达式 -->
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
   	</aop:config>
   	
   	<!-- 配置事务增强，事务如何切入   -->
   	<tx:advice id="txAdvice" transaction-manager="transactionManager">
   		<tx:attributes>
   			<!-- 所有的方法都是事务方法 -->
   			<tx:method name="*"/>
   			<!-- get开头的所有方法 -->
   			<tx:method name="get*" read-only="true"/>
   		</tx:attributes>   	
   	</tx:advice>
 
  	
   	<!-- 启用事务注解 	 -->
   	<tx:annotation-driven transaction-manager="transactionManager"/>

 </beans>    